---
name: CI

on:
  push:
    branches: [main]
    tags: '*'
  pull_request:
    branches: [main]
  workflow_call:

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: -Dwarnings

jobs:
  code-formatting:
    name: >-
      Check code formatting
      (${{matrix.os}} -
      ${{matrix.toolchain}} toolchain)
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        toolchain: [stable]
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain (${{matrix.toolchain}})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
          override: true
          components: rustfmt

      - name: Check code formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: >-
            --all -- --check -l

  lint:
    name: >-
      Lint
      (${{matrix.os}} -
      ${{matrix.build-type}} build -
      ${{matrix.toolchain}} toolchain)
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - windows-2022
          - macos-11
        toolchain: [stable]
        build-type: [debug, release, production]
    steps:
      - uses: actions/checkout@v3
      - uses: dawidd6/action-get-tag@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: tag
      - name: Install toolchain (${{matrix.toolchain}})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
          override: true
          components: clippy

      - name: Lint (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        if: ${{ matrix.build-type == 'debug' }}
        with:
          command: clippy
          args: >-
            --all-targets --all-features

      - name: Lint (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        if: ${{ matrix.build-type == 'release' }}
        with:
          command: clippy
          args: >-
            --all-targets --all-features --release

      - name: Lint (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        if: >-
          ${{ matrix.build-type == 'production' &&
          startsWith(github.ref, 'refs/tags/') }}
        with:
          command: clippy
          args: >-
            --all-targets --all-features
            --profile production

  documentation:
    name: >-
      Generate documentation
      (${{matrix.os}} -
      ${{matrix.build-type}} build -
      ${{matrix.toolchain}} toolchain)
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - windows-2022
          - macos-11
        toolchain: [stable]
        build-type: [debug, release, production]
    steps:
      - uses: actions/checkout@v3
      - uses: dawidd6/action-get-tag@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: tag
      - name: Install toolchain (${{matrix.toolchain}})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
          override: true

      - name: Documentation (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: -Dwarnings
        if: ${{ matrix.build-type == 'debug' }}
        with:
          command: doc
          args: >-
            --all-features --no-deps --document-private-items

      - name: Documentation (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: -Dwarnings
        if: ${{ matrix.build-type == 'release' }}
        with:
          command: doc
          args: >-
            --all-features --no-deps --document-private-items
            --release

      - name: Documentation (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: -Dwarnings
        if: >-
          ${{ matrix.build-type == 'production' &&
          startsWith(github.ref, 'refs/tags/') }}
        with:
          command: doc
          args: >-
            --all-features --no-deps --document-private-items
            --profile production

  build-and-test:
    name: >-
      Build and test (${{matrix.os}} -
      ${{matrix.build-type}} build -
      ${{matrix.toolchain}} toolchain)
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - windows-2022
          - macos-11
        toolchain: [stable]
        build-type: [debug, release, production]
    steps:
      - uses: actions/checkout@v3
      - uses: dawidd6/action-get-tag@v1
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: tag
      - name: Install toolchain (${{matrix.toolchain}})
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{matrix.toolchain}}
          override: true

      - name: Build (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        if: ${{ matrix.build-type == 'debug' }}
        with:
          command: build
          args: >-
            --all-features --all-targets
      - name: Test (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        if: ${{ matrix.build-type == 'debug' }}
        with:
          command: test
          args: >-
            --all-features --all-targets

      - name: Build (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        if: ${{ matrix.build-type == 'release' }}
        with:
          command: build
          args: >-
            --all-features --all-targets
            --release
      - name: Test (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        if: ${{ matrix.build-type == 'release' }}
        with:
          command: test
          args: >-
            --all-features --all-targets
            --release

      - name: Build (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        if: >-
          ${{ matrix.build-type == 'production' &&
          startsWith(github.ref, 'refs/tags/') }}
        with:
          command: build
          args: >-
            --all-features --all-targets
            --profile production
      - name: Test (${{matrix.build-type}})
        uses: actions-rs/cargo@v1
        if: >-
          ${{ matrix.build-type == 'production' &&
          startsWith(github.ref, 'refs/tags/') }}
        with:
          command: test
          args: >-
            --all-features --all-targets
            --profile production
...
