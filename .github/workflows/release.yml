---
name: Production Builds

on:
  push:
    tags:
      - '*'

jobs:
  linux-build:
    name: Linux Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Switch to Git Tag
        uses: dawidd6/action-get-tag@v1
        id: tag
      - name: Install Stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Code Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check -l

      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --profile production

      - name: Documentation
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: -Dwarnings
        with:
          command: doc
          args: >-
            --all-features
            --no-deps
            --document-private-items
            --profile production

      - name: Debug Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features

      - name: Release Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --release

      - name: Production Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --profile production

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --profile production

      # - name: Strip + UPX release binary
      #   uses: svenstaro/upx-action@v2
      #   with:
      #     file: target/production/tvrank
      #     strip: true

      - name: Tarball
        shell: bash
        run: |
          export NAME=tvrank-${{steps.tag.outputs.tag}}-linux
          mkdir $NAME
          cp target/production/tvrank $NAME/tvrank
          cp target/release/tvrank $NAME/tvrank-fastdebug
          cp target/debug/tvrank $NAME/tvrank-debug
          cp LICENSE $NAME/LICENSE
          cp README.md $NAME/README.md
          tar -c -f $NAME.tar.bz2 $NAME

      - name: Upload Tarball
        uses: actions/upload-artifact@v2
        with:
          name: tvrank-${{steps.tag.outputs.tag}}-linux.tar.bz2
          path: tvrank-${{steps.tag.outputs.tag}}-linux.tar.bz2

  macos-build:
    name: MacOS Build
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Switch to Git Tag
        uses: dawidd6/action-get-tag@v1
        id: tag
      - name: Install Stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Code Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check -l

      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --profile production

      - name: Documentation
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: -Dwarnings
        with:
          command: doc
          args: >-
            --all-features
            --no-deps
            --document-private-items
            --profile production

      - name: Debug Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features

      - name: Release Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --release

      - name: Production Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --profile production

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --profile production

      # - name: Strip + UPX release binary
      #   uses: svenstaro/upx-action@v2
      #   with:
      #     file: target/production/tvrank
      #     strip: true

      - name: Tarball
        shell: bash
        run: |
          export NAME=tvrank-${{steps.tag.outputs.tag}}-macos
          mkdir $NAME
          cp target/production/tvrank $NAME/tvrank
          cp target/release/tvrank $NAME/tvrank-fastdebug
          cp target/debug/tvrank $NAME/tvrank-debug
          cp LICENSE $NAME/LICENSE
          cp README.md $NAME/README.md
          hdiutil create -format UDZO -srcfolder $NAME $NAME.dmg

      - name: Upload Tarball
        uses: actions/upload-artifact@v2
        with:
          name: tvrank-${{steps.tag.outputs.tag}}-macos.dmg
          path: tvrank-${{steps.tag.outputs.tag}}-macos.dmg

  windows-build:
    name: Windows Build
    runs-on: windows-2019
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Switch to Git Tag
        uses: dawidd6/action-get-tag@v1
        id: tag
      - name: Install Stable Toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Code Formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check -l

      - name: Lint
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features --profile production

      - name: Documentation
        uses: actions-rs/cargo@v1
        env:
          RUSTDOCFLAGS: -Dwarnings
        with:
          command: doc
          args: >-
            --all-features
            --no-deps
            --document-private-items
            --profile production

      - name: Debug Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features

      - name: Release Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --release

      - name: Production Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-features --profile production

      - name: Tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features --profile production

      # - name: Strip + UPX release binary
      #   uses: svenstaro/upx-action@v2
      #   with:
      #     file: target/production/tvrank
      #     strip: true

      - name: Tarball
        shell: bash
        run: |
          export NAME=tvrank-${{steps.tag.outputs.tag}}-windows
          mkdir $NAME
          cp target/production/tvrank $NAME/tvrank.exe
          cp target/release/tvrank $NAME/tvrank-fastdebug.exe
          cp target/debug/tvrank.exe $NAME/tvrank-debug.exe
          cp LICENSE $NAME/LICENSE
          cp README.md $NAME/README.md
          7z a $NAME.zip $NAME

      - name: Upload Tarball
        uses: actions/upload-artifact@v2
        with:
          name: tvrank-${{steps.tag.outputs.tag}}-windows.zip
          path: tvrank-${{steps.tag.outputs.tag}}-windows.zip

  publish-github:
    name: Publish Releases to Github
    needs: [linux-build, macos-build, windows-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Switch to Git Tag
        uses: dawidd6/action-get-tag@v1
        id: tag

      - name: Download Linux Tarball
        uses: actions/download-artifact@v2
        with:
          name: tvrank-${{steps.tag.outputs.tag}}-linux.tar.bz2
      - name: Download MacOS Tarball
        uses: actions/download-artifact@v2
        with:
          name: tvrank-${{steps.tag.outputs.tag}}-macos.dmg
      - name: Download Windows Tarball
        uses: actions/download-artifact@v2
        with:
          name: tvrank-${{steps.tag.outputs.tag}}-windows.zip

      - name: Create Release on Github
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          tag_name: ${{steps.tag.outputs.tag}}
          release_name: tvrank-${{steps.tag.outputs.tag}}
          body_path: changelogs/${{steps.tag.outputs.tag}}.md

      - name: Upload Linux Tarball
        # id: upload-release-asset-linux
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: tvrank-${{steps.tag.outputs.tag}}-linux.tar.bz2
          asset_name: tvrank-${{steps.tag.outputs.tag}}-linux.tar.bz2
          asset_content_type: application/x-bzip2

      - name: Upload MacOS Tarball
        # id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: tvrank-${{steps.tag.outputs.tag}}-macos.dmg
          asset_name: tvrank-${{steps.tag.outputs.tag}}-macos.dmg
          asset_content_type: application/x-bzip2

      - name: Upload Windows Tarball
        # id: upload-release-asset-macos
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
        with:
          upload_url: ${{steps.create_release.outputs.upload_url}}
          asset_path: tvrank-${{steps.tag.outputs.tag}}-windows.zip
          asset_name: tvrank-${{steps.tag.outputs.tag}}-windows.zip
          asset_content_type: application/zip

  publish-crates-io:
    name: Publish to Crates.io
    # Don't publish to crates.io unless all builds have succeeded.
    needs: [linux-build, macos-build, windows-build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Switch to Git Tag
        uses: dawidd6/action-get-tag@v1
        id: tag

      - name: Publish to Crates.io
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: cargo publish --token ${CRATES_IO_TOKEN}
...
